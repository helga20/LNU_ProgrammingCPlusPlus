#include "intProcedures.h"
#include <cmath>
using std::sqrt;

void decomposition1()
{
	cout << "\n *Розклад числа на прості множники*\n\n";
	unsigned n;
	cout << "Введіть натуральне число: "; cin >> n;
	// Знайдемо просте число, перевіримо, чи є воно дільником
	// починаємо друкувати розклад
	cout << n << " = ";
	// переберемо можливі дільники
	for (unsigned k = 2; k <= n; ++k)
	{
		// кожного з кандидатів перевіримо на простоту
		bool kSimple = true;
		unsigned high = sqrt(double(k)) + 0.5;
		for (unsigned j = 2; j <= high; ++j)
		{
			if (k % j == 0)
			{
				kSimple = false;
				break;
			}
		}
		if (kSimple)
		{
			unsigned m = k;     // степені простого k
			while (n % m == 0)  // скільки разів k ділить n?
			{
				cout << k << " x ";  // стільки разів його друкуємо
				m *= k;
			}
		}
	}
	cout << "1\n";  // друк розкладу завершено
	return;
}

void decomposition2()
{
	cout << "\n *Розклад числа на прості множники*\n\n";
	unsigned n;
	cout << "Введіть натуральне число: "; cin >> n;
	// Знайдемо дільник, перевіримо, чи він просте число
	// починаємо друкувати розклад
	cout << n << " = ";
	// переберемо можливі дільники
	for (unsigned k = 2; k <= n; ++k)
	{
		if (n % k == 0)
		{
			// знайдений дільник перевіримо на простоту
			bool kSimple = true;
			unsigned high = sqrt(double(k)) + 0.5;
			for (unsigned j = 2; j <= high; ++j)
			{
				if (k % j == 0)
				{
					kSimple = false;
					break;
				}
			}
			if (kSimple)
			{
				unsigned m = k;     // степені простого k
				while (n % m == 0)  // скільки разів k ділить n?
				{
					cout << k << " x ";  // стільки разів його друкуємо
					m *= k;
				}
			}
		}
	}
	cout << "1\n";  // друк розкладу завершено
	return;
}

void Decomposition()
{
	cout << "\n *Розклад числа на прості множники*\n\n";
	unsigned n;
	cout << "Введіть натуральне число: "; cin >> n;
	// Вилучатимемо дільники з числа, що гарантуватиме їхню простоту
	// починаємо друкувати розклад
	cout << n << " = ";
	unsigned k = 2; // перше просте число
	while (n > 1)
	{
		if (n % k == 0)
		{
			// надрукуємо черговий дільник і вилучимо його з n
			cout << k << " x ";
			n/= k;
		}
		else ++k; // перевіримо наступного кандидата
	}
	cout << "1\n";  // друк розкладу завершено
	return;
}

void Factors()
{
	cout << "\n *Розклад числа на прості множники (Седжвік)*\n\n";
	unsigned n;
	cout << "Введіть натуральне число: "; cin >> n;
	// Вилучатимемо дільники з числа, що гарантуватиме їхню простоту
	// Удосконалене відшукання останнього дільника
	// починаємо друкувати розклад
	cout << n << " = ";
	unsigned k = 2; // перше просте число
	while (k*k <= n)
	{
		if (n % k == 0)
		{
			// надрукуємо черговий дільник і вилучимо його з n
			cout << k << " x ";
			n /= k;
		}
		else ++k; // перевіримо наступного кандидата
	}
	// Останній множник залишився в n
	cout << n << '\n';  // друк розкладу завершено
	return;
}