#include <iostream>
#include <Windows.h>

using namespace std;

int main()
{
	// Встановимо правильне кодування для виведення кирилиці
	SetConsoleOutputCP(1251);
	/* Задано натуральне n. Обчислити n!
	*/
	cout << " *** Task 1\n\n";
	cout << "Уведіть натуральне (не дуже велике) число: ";
	unsigned n;
	cin >> n;
	// Для обчислення факторіала треба перебрати n послідовних чисел
	// і виконати множення з кожним
	// Для цього використаємо інструкцію for
	long long factorial = 1LL; // початкове значення факторіала
	for (unsigned multiplier = 2; multiplier <= n; ++multiplier)
	{
		factorial *= multiplier;
	}
	cout << n << "! = " << factorial << endl;
	system("pause");
	/* Задано натуральне n. Обчислити sqrt(3 + sqrt(6 + ... + sqrt(3(n-1) + sqrt(3n)) ... )).
	*/
	cout << "\n *** Task 2\n\n";
	cout << "Уведіть натуральне число: ";
	cin >> n; // ця змінна вже оголошена раніше
	double R = 0.; // майбутній результат
	// Обчислення потрібно починати з останнього кореня.
	// Організуємо перебір від кінця
	for (unsigned term = 3 * n; term >= 3; term -= 3)
	{
		R = sqrt(term + R);
	}
	cout << "Довгий корінь = " << R << endl;
	system("pause");
	/* Задано натуральне n. Обчислити
	   sin(1)    sin(1)+sin(2)           sin(1)+sin(2)+...+sin(n)
	   ------ x --------------- x ... x --------------------------.
	   cos(n)   cos(n)+cos(n-1)         cos(n)+cos(n-1)+...+cos(1)
	*/
	cout << "\n *** Task 3\n\n";
	cout << "Уведіть натуральне число: ";
	cin >> n; // ця змінна вже оголошена раніше
	// Будемо накопичувати суму синусів для чисельника, суму косинусів для знаменника і весь добуток
	double S = 0.; // сума синусів
	double C = 0.; // сума косинусів
	double P = 1.; // шуканий добуток
	// В інструкції for можемо перебрати аргументи і синусів, і косинусів
	for (unsigned i = 1, j = n; i <= n; ++i, --j)
	{
		S += sin(i);
		C += cos(j);
		P *= S / C;
	}
	cout << "Добуток дробів тригонометричних функцій = " << P << endl;
	system("pause");
	return 0;
}