#include <iostream>
#include <Windows.h>

using namespace std;

int main()
{
	// Встановимо правильне кодування для виведення кирилиці
	SetConsoleOutputCP(1251);
	/* Задано два дійсні числа. Якщо друге більше від першого, то надрукувати їх без змін.
	   У протилежному випадку поміняти значення місцями і надрукувати.
	*/
	cout << " *** Task 1\n\n";
	cout << "Уведіть два числа: ";
	double first, second;
	cin >> first >> second;
	// Використаємо вкорочену інструкцію if, оскільки зміни потрібні тільки в одному випадку
	// Додаткову змінну для обміну значень можемо оголосити всередині інструкції
	if (first > second)
	{
		double toSwap = first;
		first = second;
		second = toSwap;
	}
	cout << "Впорядковані два числа: " << first << ' ' << second << endl;
	system("pause");
	/* Задано два різні цілі числа. Надрукувати повідомлення, котре з них більше.
	*/
	cout << "\n *** Task 2\n\n";
	cout << "Уведіть два різні цілі числа: ";
	int a, b;
	cin >> a >> b;
	// В обох випадках потрібно щось робити, тому використаємо повну інструкцію if
	if (a > b)
	{
		cout << "Перше\n";
	}
	else
	{
		cout << "Друге\n";
	}
	/* Можемо додатково перевірити, чи не рівні введені числа.
	   Тоді потрібна вкладена інструкція if
	*/
	cout << "\n *** З додатковою перевіркою\n";
	if (a == b)
	{
		cout << "Числа рівні\n";
	}
	else if(a > b)
	{
		cout << "Перше більше\n";
	}
	else
	{
		cout << "Друге більше\n";
	}
	system("pause");
	/* Задано три різні цілі числа. Знайти значення найбільшого з них.
	*/
	cout << "\n *** Task 3\n\n";
	cout << "Уведіть три різні цілі числа: ";
	int c; // Змінні a і b оголошені раніше
	cin >> a >> b >> c;
	// Використаємо вкладені галуження, щоб мінімізувати кількість порівнянь і присвоєнь
	int max;
	if (a > b)
	{
		if (a > c) max = a;
		else max = c;
	}
	else if (b > c) max = b;
	else max = c;
	cout << "max(" << a << ',' << b << ',' << c << ") = " << max << endl;
	system("pause");
	return 0;
}